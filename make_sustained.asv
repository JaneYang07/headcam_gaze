function exceptions = make_sustained(IDs, option)

if numel(option) > 1
    exceptions = {};
    for o = 1:numel(option)
        exceptions{o,1} = make_sustained(IDs, option(o));
    end
    if isempty(exceptions)
        disp('No exceptions');
    end
    return
end

subs = cIDs(IDs);

switch option
    
    case 1
        min_max_gap = 0.25;
        max_max_gap = 1;
        min_duration = 1;
        variable_name = 'cevent_eye-vision_largest-dominant-roi_child';
        
        output_name = 'cevent_eye-vision_largest-dominant-roi-sustained-11s_child';
        record_cstream = 1;
        
end

% a new version of merging, if gap < max_max_gap but > min_max_gap, each  of the two to-be-merged
% segments should be longer than max_max_gap/2;
exceptions = {};
e =1;
for s = 1:numel(subs)
    if ~iscell(variable_name)
        variable_name = {variable_name};
    end
    if ~iscell(output_name)
        output_name = {output_name};
    end
    for v = 1:numel(variable_name)
        try
            cevent = get_variable(subs(s), variable_name{v});
            cevent = cevent_merge_segments(cevent,min_max_gap);
            new_cev = cevent(1,:);
            for c = 2:length(cevent)
                if (cevent(c,2)-cevent(c,1) >= max_max_gap/2 && new_cev(end,2)-new_cev(end,1) >= max_max_gap/2 && cevent(c,1)-new_cev(end,2) <= max_max_gap && cevent(c,3) == new_cev(end,3))
                    new_cev(end, 2) = cevent(c,2);
                else
                    new_cev = [new_cev; cevent(c,:)];
                end
            end
            
            cevent_final = cevent_remove_small_segments(new_cev, min_duration);
            
            % record both cevent and cstream
            record_variable(subs(s), output_name{v}, cevent_final);
            if record_cstream
                timebase = make_time_base(subs(s));
                cst = cevent2cstream_v2(cevent_final, [], [], timebase);
                record_additional_variable(subs(s), strrep(output_name{v}, 'cevent', 'cstream'), cst);
            end
        catch ME
            exceptions(e,1:3) = {subs(s), variable_name{v}, ME.message};
            e = e + 1;
        end
    end
end
if isempty(exceptions)
    exceptions = 'No exceptions';
end
end